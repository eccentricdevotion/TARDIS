# This workflow will build a Java project with Gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # get short sha
    - name: Set SHORT_SHA env property
      run: echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    
    # set executable permissions on gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # build
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Delete old release assets
      uses: mknejp/delete-release-assets@v1
      with:
        assets: 'TARDIS-*.jar' # Globs or specific names of assets to delete
        tag: '1.21.8' # The tag of the release to modify
        token: ${{ secrets.TARDIS_WORKFLOW }} # Required for authentication

    - name: Upload build artifacts to release
      uses: softprops/action-gh-release@v2
      # if: github.ref_type == 'branches'
      with:
        token: ${{ secrets.TARDIS_WORKFLOW }}
        tag_name: '1.21.8'
        files: build/libs/*.jar
        fail_on_unmatched_files: false
        body: "- ${{ github.event.head_commit.message }}"
        append_body: true
